{"version":3,"file":"facts.js","names":["Drupal","$","window","behaviors","facts","attach","context","settings","fn","inViewport","cb","this","each","i","el","visPx","H","height","r","getBoundingClientRect","t","top","b","bottom","call","Math","max","on","px","initNumAnim","prop","parseInt","text","parseFloat","animate","Counter","duration","step","now","toFixed","toLocaleString","jQuery"],"sources":["facts.js"],"mappings":"CAAC,SAAUA,EAAQC,EAAGC,GAClB,aAEAF,EAAOG,UAAUC,MAAQ,CACrBC,OAAQ,SAAUC,EAASC,GACvBN,EAAEO,GAAGC,WAAa,SAAUC,GACxB,OAAOC,KAAKC,MAAK,SAAUC,EAAGC,GAC1B,SAASC,IACL,IAAIC,EAAIf,EAAEU,MAAMM,SACZC,EAAIJ,EAAGK,wBAAyBC,EAAIF,EAAEG,IAAKC,EAAIJ,EAAEK,OACrD,OAAOb,EAAGc,KAAKV,EAAIW,KAAKC,IAAI,EAAGN,EAAI,EAAIJ,EAAII,EAAKE,EAAIN,EAAIM,EAAIN,GAChE,CAAED,IACFd,EAAEC,GAAQyB,GAAG,gBAAiBZ,EAClC,GACJ,EAEAd,EAAE,UAAUQ,YAAW,SAAUmB,GAIzBA,EAAK,IAAMjB,KAAKkB,cAChBlB,KAAKkB,aAAc,EACnB5B,EAAEU,MAAMmB,KAAK,UAAW,GAAGA,KAAK,YAAaC,SAAS9B,EAAEU,MAAMqB,SAAWC,WAAWhC,EAAEU,MAAMqB,SAASE,QAAQ,CACzGC,QAASlC,EAAEU,MAAMqB,QAClB,CACCI,SAAU,IACVC,KAAM,SAAUC,GACRrC,EAAEU,MAAMmB,KAAK,aACb7B,EAAEU,MAAMqB,KAAKC,WAAWK,EAAIC,QAAQ,IAAIC,eAAe,UAEvDvC,EAAEU,MAAMqB,KAAKC,WAAWK,EAAIC,QAAQ,IAAIC,eAAe,SAC/D,IAGZ,GACJ,EAER,CArCA,CAqCExC,OAAQyC,OAAQ9B","sourcesContent":["(function (Drupal, $, window) {\n    'use strict';\n\n    Drupal.behaviors.facts = {\n        attach: function (context, settings) {\n            $.fn.inViewport = function (cb) {\n                return this.each(function (i, el) {\n                    function visPx() {\n                        let H = $(this).height(),\n                            r = el.getBoundingClientRect(), t = r.top, b = r.bottom;\n                        return cb.call(el, Math.max(0, t > 0 ? H - t : (b < H ? b : H)));\n                    } visPx();\n                    $(window).on(\"resize scroll\", visPx);\n                });\n            };\n\n            $(\".count\").inViewport(function (px) { // Make use of the `px` argument!!!\n                // if element entered V.port ( px>0 ) and\n                // if prop initNumAnim flag is not yet set\n                //  = Animate numbers\n                if (px > 0 && !this.initNumAnim) {\n                    this.initNumAnim = true; // Set flag to true to prevent re-running the same animation\n                    $(this).prop('Counter', 0).prop('isDecimal', parseInt($(this).text()) == parseFloat($(this).text())).animate({\n                        Counter: $(this).text()\n                    }, {\n                        duration: 1000,\n                        step: function (now) {\n                            if ($(this).prop('isDecimal'))\n                                $(this).text(parseFloat(now.toFixed(0)).toLocaleString(\"en-US\"));\n                            else\n                                $(this).text(parseFloat(now.toFixed(1)).toLocaleString(\"en-US\"));\n                        }\n                    });\n                }\n            });\n        }\n    };\n}(Drupal, jQuery, this));\n"]}