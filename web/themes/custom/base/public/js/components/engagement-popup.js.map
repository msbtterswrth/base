{"version":3,"file":"engagement-popup.js","names":["Drupal","Cookies","behaviors","engagement_popup","idAttribute","engagementPopup","$popup","config","id","getAttribute","this","scrollDepth","parseInt","timeOnPage","cookieExpiry","cookieKey","closeCookie","get","$closeButton","querySelector","$form","closeHandler","classList","remove","set","expires","checkIfShouldOpen","cb","contains","apply","arguments","addEventListener","document","body","html","documentElement","height","Math","max","scrollHeight","offsetHeight","clientHeight","triggerPercentage","scrollTop","window","innerHeight","add","setTimeout","attach","$context","settings","hasAttribute","querySelectorAll","forEach"],"sources":["engagement-popup.js"],"mappings":"CAAC,SAAUA,EAAQC,GACjB,aAEAD,EAAOE,UAAUC,iBAAmB,CAClCC,YAAa,wBACbC,gBAAiB,SAASC,GACxB,MAAMC,EAAS,CACbC,GAAIF,EAAOG,aAAaC,KAAKN,aAC7BO,YAAaC,SAASN,EAAOG,aAAa,sBAC1CI,WAAiE,IAArDD,SAASN,EAAOG,aAAa,sBACzCK,aAAcF,SAASN,EAAOG,aAAa,wBAEvCM,EAAY,oBAAoBR,EAAOC,KAC7C,IAAIQ,EAAcf,EAAQgB,IAAIF,GAC9B,GAAIC,EACF,OAEF,MAAME,EAAeZ,EAAOa,cAAc,UACpCC,EAAQd,EAAOa,cAAc,QAE7BE,EAAe,WACnBf,EAAOgB,UAAUC,OAAO,UACxBtB,EAAQuB,IAAIT,EAAW,SAAU,CAC/BU,QAASlB,EAAOO,eAElBE,GAAc,CAChB,EACMU,EAAoB,SAASC,GACjC,OAAO,WACDX,GAGAV,EAAOgB,UAAUM,SAAS,WAG9BD,EAAGE,MAAMnB,KAAMoB,UACjB,CACF,EAEIZ,GACFA,EAAaa,iBAAiB,SAAS,WACrCV,GACF,IAGED,GACFA,EAAMW,iBAAiB,SAAUV,GAGnCW,SAASD,iBAAiB,SAAUL,GAAkB,WACpD,MAAMO,EAAOD,SAASC,KAChBC,EAAOF,SAASG,gBAChBC,EAASC,KAAKC,IAAIL,EAAKM,aAAcN,EAAKO,aAAcN,EAAKO,aAAcP,EAAKK,aAAcL,EAAKM,cACnGE,EAAoBnC,EAAOI,YACbqB,SAASG,gBAAgBQ,WAAaP,EAASQ,OAAOC,aAAgB,IACzEH,GACfpC,EAAOgB,UAAUwB,IAAI,SAEzB,KAEAC,WAAWrB,GAAkB,WAC3BpB,EAAOgB,UAAUwB,IAAI,SACvB,IAAIvC,EAAOM,WACb,EACAmC,OAAQ,SAAUC,EAAUC,GACtBD,EAASE,aAAazC,KAAKN,aAC7BM,KAAKL,gBAAgB4C,GAErBA,EAASG,iBAAiB,IAAI1C,KAAKN,gBAAgBiD,QAAQ3C,KAAKL,gBAEpE,EAGJ,CAzEA,CAyEEL,OAAQC","sourcesContent":["(function (Drupal, Cookies) {\n  'use strict';\n\n  Drupal.behaviors.engagement_popup = {\n    idAttribute: 'data-engagement-popup',\n    engagementPopup: function($popup){\n      const config = {\n        id: $popup.getAttribute(this.idAttribute),\n        scrollDepth: parseInt($popup.getAttribute('data-scroll-depth')),\n        timeOnPage: parseInt($popup.getAttribute('data-time-on-page')) * 1000,\n        cookieExpiry: parseInt($popup.getAttribute('data-cookie-expiry')),\n      };\n      const cookieKey = `engagement-popup-${config.id}`;\n      let closeCookie = Cookies.get(cookieKey);\n      if (closeCookie) {\n        return;\n      }\n      const $closeButton = $popup.querySelector('.close');\n      const $form = $popup.querySelector('form');\n\n      const closeHandler = function(){\n        $popup.classList.remove('active');\n        Cookies.set(cookieKey, 'closed', {\n          expires: config.cookieExpiry\n        });\n        closeCookie = true;\n      };\n      const checkIfShouldOpen = function(cb){\n        return function(){\n          if (closeCookie) {\n            return;\n          }\n          if ($popup.classList.contains('active')) {\n            return;\n          }\n          cb.apply(this, arguments);\n        };\n      };\n\n      if ($closeButton) {\n        $closeButton.addEventListener('click', function(){\n          closeHandler();\n        });\n      }\n\n      if ($form) {\n        $form.addEventListener('submit', closeHandler);\n      }\n\n      document.addEventListener('scroll', checkIfShouldOpen(function(){\n        const body = document.body\n        const html = document.documentElement;\n        const height = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n        const triggerPercentage = config.scrollDepth;\n        const percentage = (document.documentElement.scrollTop / (height - window.innerHeight)) * 100;\n        if (percentage > triggerPercentage) {\n          $popup.classList.add('active');\n        }\n      }));\n\n      setTimeout(checkIfShouldOpen(function(){\n        $popup.classList.add('active');\n      }), config.timeOnPage);\n    },\n    attach: function ($context, settings) {\n      if ($context.hasAttribute(this.idAttribute)) {\n        this.engagementPopup($context)\n      } else {\n        $context.querySelectorAll(`[${this.idAttribute}]`).forEach(this.engagementPopup);\n      }\n    }\n  };\n\n}(Drupal, Cookies));\n"]}