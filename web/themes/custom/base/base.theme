<?php

use Drupal\base\Theme;
use Drupal\Core\Link;
use Drupal\node\Entity\NodeType;
use Drupal\node\NodeInterface;
use Drupal\taxonomy\TermInterface;

function base_preprocess_html(array &$vars)
{
}

function base_preprocess_page(array &$vars)
{
  Theme::getSiteWrapClasses($vars);
  
  $nodeStorage = \Drupal::entityTypeManager()->getStorage('node');
  $termStorage = \Drupal::entityTypeManager()->getStorage('taxonomy_term');
}

/**
 * Implements hook_preprocess_node().
 */
function base_preprocess_node(array &$vars)
{
  $node = $vars['node'];
  $vars['content_type'] = NodeType::load($node->bundle())->label();
}

function base_preprocess_region(array &$vars)
{
}

function base_theme_suggestions_page_alter(array &$suggestions, array $variables)
{
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $content_type = $node->bundle();
    $suggestions[] = 'page__' . $content_type;
  }
}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function base_theme_suggestions_field_alter(&$suggestions, array $variables) {
  $element = $variables['element'];
  $suggestions[] = 'field__' . $element['#entity_type'] . '__' .
  $element['#field_name'] . '__' . $element['#bundle'] . '__' .
  $element['#view_mode'];
}

function base_theme_suggestions_block_alter(array &$suggestions, array $vars)
{
  Theme::getThemeSuggestionsForBlocks($suggestions, $vars);
}

function base_theme_suggestions_paragraph_alter(array &$suggestions, array $vars)
{
  Theme::getThemeSuggestionsForParagraphs($suggestions, $vars);
}

/**
 * Implements hook_preprocess_block().
 */
function base_preprocess_block(array &$vars)
{
  Theme::preprocessBlock($vars);
}

/**
 * Implements hook_preprocess_paragraph().
 */
function base_preprocess_paragraph(&$vars){
  Theme::preprocessParagraph($vars);
}

function base_preprocess_container(array &$vars)
{
}
